{% schema %}
{
    "name": "Action Cards",
    "settings": [
        {
            "type": "text",
            "id": "title",
            "label": "Section Title",
            "default": "Action Cards"
        },
        {
            "type": "range",
            "id": "card_count",
            "min": 1,
            "max": 6,
            "step": 1,
            "default": 3,
            "label": "Number of Cards"
        },
        {
            "type": "range",
            "id": "margin_top",
            "min": 0,
            "max": 100,
            "step": 4,
            "default": 0,
            "label": "Margin Top",
            "unit": "px"
        },
        {
            "type": "range",
            "id": "margin_bottom",
            "min": 0,
            "max": 100,
            "step": 4,
            "default": 100,
            "label": "Margin Bottom",
            "unit": "px"
        }
    ],
    "blocks": [
        {
            "type": "card",
            "name": "Card",
            "settings": [
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "Card Image"
                },
                {
                    "type": "text",
                    "id": "title",
                    "label": "Card Title",
                    "default": "Card Title"
                },
                {
                    "type": "text",
                    "id": "subtitle",
                    "label": "Card Subtitle"
                },
                {
                    "type": "text",
                    "id": "button_text",
                    "label": "Button Text"
                },
                {
                    "type": "url",
                    "id": "link",
                    "label": "Card Link"
                }
            ]
        }
    ],
    "presets": [
        {
            "name": "Action Cards",
            "blocks": [
                {
                    "type": "card"
                },
                {
                    "type": "card"
                },
                {
                    "type": "card"
                }
            ]
        }
    ]
}
{% endschema %}

<div class='px-[16px] md:px-[80px] mb-[{{ section.settings.margin_bottom }}px] mt-[{{ section.settings.margin_top }}px]'>
    <!-- SECTION TITLE -->
    {% if section.settings.title != blank %}
        <p class='mb-[32px] text-[24px] font-bold text-text-primary'>{{ section.settings.title }}</p>
    {% endif %}

    <!-- DESKTOP VERSION -->
    <div class='hidden md:!grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-[16px]'>
        {% for block in section.blocks limit: section.settings.card_count %}
            <div
                class='aspect-square relative rounded-[12px] cursor-pointer'
                onclick="handleDesktopCardClick('{{ block.settings.link }}')"
            >
                {% if block.settings.image %}
                    {{
                        block.settings.image
                        | image_url: width: 400
                        | image_tag:
                            class: 'w-full h-full object-cover rounded-[12px]',
                            width: '100%',
                            height: '100%',
                            alt: block.settings.title
                    }}
                {% else %}
                    {{ 'image' | placeholder_svg_tag: 'w-full h-full object-cover rounded-[12px]' }}
                {% endif %}
                <div class='absolute bottom-0 left-0 w-full h-full bg-[rgba(0,0,0,0.3)] from-black to-transparent rounded-[24px] flex flex-col justify-end p-[32px]'>
                    <p class='text-text-inverse text-[24px] font-bold'>{{ block.settings.title }}</p>
                    {% if block.settings.subtitle != blank %}
                        <p class='text-text-inverse text-[18px] font-medium'>{{ block.settings.subtitle }}</p>
                    {% endif %}
                    {% if block.settings.button_text != blank %}
                        <div class='flex justify-center items-center px-[16px] py-[8px] bg-highlight-yellow rounded-[24px] w-fit mt-[24px]'>
                            <p class='text-text-primary text-[16px] font-medium'>{{ block.settings.button_text }}</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        {% endfor %}
    </div>

    <!-- MOBILE VERSION (SLIDER) -->
    <div id='mobile-slider' class='block md:!hidden relative aspect-square rounded-[12px] overflow-hidden'>
        {% for block in section.blocks limit: section.settings.card_count %}
            <div
                class='mobile-card absolute inset-0 transition-opacity duration-300 ease-in-out cursor-pointer {% if forloop.first %}opacity-100 z-2{% else %}opacity-0 z-0{% endif %}'
                data-card-index='{{ forloop.index0 }}'
                onclick="handleCardClick({{ forloop.index0 }}, '{{ block.settings.link }}')"
            >
                {% if block.settings.image %}
                    {{
                        block.settings.image
                        | image_url: width: 400
                        | image_tag:
                            class: 'w-full h-full object-cover rounded-[12px]',
                            width: '100%',
                            height: '100%',
                            alt: block.settings.title
                    }}
                {% else %}
                    {{ 'image' | placeholder_svg_tag: 'w-full h-full object-cover rounded-[12px]' }}
                {% endif %}
                <div class='absolute bottom-0 left-0 w-full h-full bg-[rgba(0,0,0,0.3)] from-black to-transparent rounded-[12px] flex flex-col justify-end p-[24px]'>
                    <p class='text-text-inverse text-[24px] font-bold'>{{ block.settings.title }}</p>
                    {% if block.settings.subtitle != blank %}
                        <p class='text-text-inverse text-[18px] font-medium'>{{ block.settings.subtitle }}</p>
                    {% endif %}
                    {% if block.settings.button_text != blank %}
                        <div class='flex justify-center items-center px-[16px] py-[8px] bg-highlight-yellow rounded-[24px] w-fit mt-[8px]'>
                            <p class='text-text-primary text-[16px] font-medium'>{{ block.settings.button_text }}</p>
                        </div>
                    {% endif %}

                    <div class='flex flex-row justify-between items-center mt-[24px] w-full gap-[8px]'>
                        {% for i in (1..section.settings.card_count) %}
                            <span
                                class='w-full bg-white flex-1 h-[4px] rounded-full cursor-pointer {% if forloop.index0 == forloop.parentloop.index0 %}bg-opacity-100{% else %}bg-opacity-50{% endif %}'
                                onclick='handleMobileCardClick({{ forloop.index0 }})'
                            ></span>
                        {% endfor %}
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
</div>

<script>
    // Desktop card click
    const handleDesktopCardClick = (link) => {
        if (link && link.trim() !== '') {
            window.location.href = link;
        }
    };

    // Move to the next card in the mobile slider
    const moveToNextCard = (currentIndex) => {
        const cards = document.querySelectorAll('.mobile-card');
        cards.forEach((card, i) => {
            if (i === currentIndex) {
                card.classList.remove('opacity-100');
                card.classList.add('opacity-0');
                card.style.zIndex = 0;
            }
            if (i === currentIndex + 1) {
                card.classList.remove('opacity-0');
                card.classList.add('opacity-100');
                card.style.zIndex = 10;
            }
            // If we are on the last card, go back to the first
            if (currentIndex === cards.length - 1) {
                card.classList.remove('opacity-100');
                card.classList.add('opacity-0');
                card.style.zIndex = 0;
                cards[0].classList.remove('opacity-0');
                cards[0].classList.add('opacity-100');
                cards[0].style.zIndex = 10;
            }
        });
    };

    // Decides whether to navigate or move to next card
    const handleCardClick = (currentIndex, link) => {
        if (link && link.trim() !== '') {
            window.location.href = link;
        } else {
            moveToNextCard(currentIndex);
        }
    };

    // Manually navigate to a specific card in the mobile slider
    const handleMobileCardClick = (index) => {
        const cards = document.querySelectorAll('.mobile-card');
        cards.forEach((card, i) => {
            if (i === index) {
                card.classList.add('opacity-100');
                card.classList.remove('opacity-0');
                card.style.zIndex = 10;
            } else {
                card.classList.remove('opacity-100');
                card.classList.add('opacity-0');
                card.style.zIndex = 0;
            }
        });
    };
</script>

<style>
    .mobile-card {
        transition: opacity 0.3s ease-in-out;
    }
</style>
